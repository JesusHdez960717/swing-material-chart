package com.jaga.swing.chart;

import com.jhw.swing.material.components.button._MaterialButtonIconTransparent;
import com.jhw.swing.material.components.container.panel._PanelComponent;
import com.jhw.swing.material.components.container.panel._PanelTransparent;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import com.jhw.swing.util.interfaces.MaterialComponent;
import com.jhw.swing.material.standards.MaterialIcons;

/**
 *
 * @author Jessica Aidyl Garcia Albalah (jgarciaalbalah@gmail.com)
 */
public class _MaterialConvertChar extends _PanelTransparent implements MaterialComponent {

    private _MaterialLineChart lineChart;
    private _MaterialBarChart barChart;

    public _MaterialConvertChar() {
        initComponents();
        lineChart = new _MaterialLineChart();
        barChart = new _MaterialBarChart();
        addListeners();
        personalize();
        changeToBars();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//
    private void initComponents() {

        panelChart = new com.jhw.swing.material.components.container.panel._PanelComponent();
        buttonBarChart = new com.jhw.swing.material.components.button._MaterialButtonIconTransparent();
        buttonLineChart = new com.jhw.swing.material.components.button._MaterialButtonIconTransparent();

        javax.swing.GroupLayout panelChartLayout = new javax.swing.GroupLayout(panelChart);
        panelChart.setLayout(panelChartLayout);
        panelChartLayout.setHorizontalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelChartLayout.setVerticalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        buttonBarChart.setText("_MaterialIconButtonTranspRect1");

        buttonLineChart.setText("_MaterialIconButtonTranspRect2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 596, Short.MAX_VALUE)
                .addComponent(buttonLineChart, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(buttonBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLineChart, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(panelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    // Variables declaration - do not modify//:variables
    private com.jhw.swing.material.components.button._MaterialButtonIconTransparent buttonBarChart;
    private com.jhw.swing.material.components.button._MaterialButtonIconTransparent buttonLineChart;
    private com.jhw.swing.material.components.container.panel._PanelComponent panelChart;
    // End of variables declaration                   

    private void addListeners() {
        buttonBarChart.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                changeToBars();
            }
        });
        buttonLineChart.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                changeToLine();
            }
        });
        buttonBarChart.setToolTipText("Convertir a grafico de barras.");
        buttonLineChart.setToolTipText("Convertir a grafico de lineas.");
    }

    private void personalize() {
        buttonLineChart.setIcon(MaterialIcons.MULTILINE_CHART);
        buttonBarChart.setIcon(MaterialIcons.EQUALIZER);
    }

    public void changeToLine() {
        actualiceLines();
        panelChart.setComponent(lineChart);
    }

    public void changeToBars() {
        actualiceBars();
        panelChart.setComponent(barChart);
    }

    public void addSerie(String serieName, Color color) {
        lineChart.addSerie(serieName, color);
    }

    public void addSpot(int serieId, Number x, Number y) {
        lineChart.addSpot(serieId, x, y);
    }

    public _MaterialLineChart getChart() {
        return lineChart;
    }

    public void setChart(_MaterialLineChart lineChart) {
        this.lineChart = lineChart;
    }

    public _MaterialButtonIconTransparent getButtonBarChart() {
        return buttonBarChart;
    }

    public _MaterialButtonIconTransparent getButtonLineChart() {
        return buttonLineChart;
    }

    private void actualiceBars() {
        barChart = lineChart.convertLineToBar();
    }

    private void actualiceLines() {
        this.lineChart = lineChart.convertLineToBar().convertBarToLine();
    }

    public _PanelComponent getPanelChart() {
        return panelChart;
    }

    public void setTitle(String title) {
        this.getChart().getChart().setTitle(title);
    }
}
